type Query {
  events: [Event!]!
  event(id: ID!): Event!
}
type Event {
  id: ID!
  title: String!
  desc: String!
  short_desc: String!
  date: String!
  to: String!
  location_id: Int!
  user_id: ID!
  cover: String
  users: [User!]!
  participants: [Participant!]!
  locations: [Location!]!
  eventsyncs: [EventSync!]!
}
input CreateEventInput {
  title: String!
  desc: String!
  short_desc: String!
  date: String!
  to: String!
  location_id: Int!
  user_id: ID!
  cover: String
}
input UpdateEventInput {
  title: String!
  desc: String!
  short_desc: String!
  date: String!
  to: String!
  location_id: Int!
  user_id: ID!
  cover: String
}

type Mutation {
  createEvent(data: CreateEventInput!): Event!
  updateEvent(id: ID!, data: UpdateEventInput!): Event!
  deleteEvent(id: ID!): Event!
  deleteAllEvents: DeleteAllOutput!
}

type Subscription {
  eventCreated: Event!
  eventUpdated: Event!
  eventDeleted: Event!
}
